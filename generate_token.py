#!/usr/bin/env python3
"""
–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Ç–æ–∫–µ–Ω–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–ª—è HRD-bot
–ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —Ç–æ–∫–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
"""

import secrets
import string

def generate_secure_token(length=32):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω—ã–π —Ç–æ–∫–µ–Ω"""
    return secrets.token_urlsafe(length)

def generate_readable_token(length=24):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —á–∏—Ç–∞–µ–º—ã–π —Ç–æ–∫–µ–Ω (—Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã –∏ —Ü–∏—Ñ—Ä—ã)"""
    alphabet = string.ascii_letters + string.digits
    return ''.join(secrets.choice(alphabet) for _ in range(length))

if __name__ == "__main__":
    import sys
    
    print("üîê –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Ç–æ–∫–µ–Ω–æ–≤ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ HRD-bot")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    num_tokens = 1
    if len(sys.argv) > 1:
        try:
            num_tokens = int(sys.argv[1])
            if num_tokens < 1 or num_tokens > 10:
                print("‚ùå –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–∫–µ–Ω–æ–≤ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 1 –¥–æ 10")
                sys.exit(1)
        except ValueError:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–∫–µ–Ω–æ–≤")
            sys.exit(1)
    
    print(f"–ì–µ–Ω–µ—Ä–∞—Ü–∏—è {num_tokens} —Ç–æ–∫–µ–Ω–∞(–æ–≤)...\n")
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–æ–∫–µ–Ω—ã
    secure_tokens = [generate_secure_token(32) for _ in range(num_tokens)]
    readable_tokens = [generate_readable_token(24) for _ in range(num_tokens)]
    
    if num_tokens == 1:
        print(f"–ë–µ–∑–æ–ø–∞—Å–Ω—ã–π —Ç–æ–∫–µ–Ω (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π):")
        print(f"ADMIN_INIT_TOKEN={secure_tokens[0]}")
        print()
        
        print(f"–ß–∏—Ç–∞–µ–º—ã–π —Ç–æ–∫–µ–Ω (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞):")
        print(f"ADMIN_INIT_TOKEN={readable_tokens[0]}")
    else:
        print(f"–ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ):")
        print(f"ADMIN_INIT_TOKENS={','.join(secure_tokens)}")
        print()
        
        print(f"–ß–∏—Ç–∞–µ–º—ã–µ —Ç–æ–∫–µ–Ω—ã (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞):")
        print(f"ADMIN_INIT_TOKENS={','.join(readable_tokens)}")
        print()
        
        print("–û—Ç–¥–µ–ª—å–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã:")
        for i, token in enumerate(secure_tokens, 1):
            print(f"  –¢–æ–∫–µ–Ω {i}: {token}")
    
    print("\nüìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:")
    if num_tokens == 1:
        print("1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –æ–¥–∏–Ω –∏–∑ —Ç–æ–∫–µ–Ω–æ–≤ –≤—ã—à–µ")
        print("2. –î–æ–±–∞–≤—å—Ç–µ –µ–≥–æ –≤ —Ñ–∞–π–ª .env –∫–∞–∫ ADMIN_INIT_TOKEN=...")
    else:
        print("1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—Ç—Ä–æ–∫—É ADMIN_INIT_TOKENS=... –≤—ã—à–µ")
        print("2. –î–æ–±–∞–≤—å—Ç–µ –µ—ë –≤ —Ñ–∞–π–ª .env")
        print("3. –ö–∞–∂–¥—ã–π —Ç–æ–∫–µ–Ω –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –æ–¥–Ω–∏–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º")
    
    print("3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞")
    print("4. –î–∞–π—Ç–µ —Ç–æ–∫–µ–Ω—ã –ª—é–¥—è–º, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã —Å—Ç–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏")
    print("5. –û–Ω–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É—é—Ç—Å—è –∏ –≤–≤–æ–¥—è—Ç —Å–≤–æ–∏ —Ç–æ–∫–µ–Ω—ã")
    print("6. –í–ê–ñ–ù–û: –ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –≤—Å–µ—Ö –∞–¥–º–∏–Ω–æ–≤ —É–¥–∞–ª–∏—Ç–µ —Ç–æ–∫–µ–Ω—ã –∏–∑ .env!")
    print()
    print(f"‚öôÔ∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∏: MAX_ADMINS={num_tokens} (–º–∞–∫—Å–∏–º—É–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)")
    print("‚ö†Ô∏è  –ù–ò–ö–û–ú–£ –ù–ï –ü–û–ö–ê–ó–´–í–ê–ô–¢–ï –≠–¢–ò –¢–û–ö–ï–ù–´!")
    print("\nüí° –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
    print("  python generate_token.py       # 1 —Ç–æ–∫–µ–Ω")
    print("  python generate_token.py 3     # 3 —Ç–æ–∫–µ–Ω–∞")
    print("  python generate_token.py 5     # 5 —Ç–æ–∫–µ–Ω–æ–≤") 