"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏—è—Ö FSM

–≠—Ç–æ—Ç –º–æ–¥—É–ª—å –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É –≤—Å–µ—Ö –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã—Ö –≤–≤–æ–¥–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:

üîÑ –ü–†–ò–ù–¶–ò–ü –†–ê–ë–û–¢–´:
- –ö–∞–∂–¥–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM –∏–º–µ–µ—Ç —Å–≤–æ–π —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É—é—Ç —Ç–∏–ø –æ—à–∏–±–∫–∏ –∏ –¥–∞—é—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
- –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ª–æ–≤–∏—Ç –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–ª—É—á–∞–∏
- –í—Å–µ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –ª–æ–≥–∏—Ä—É—é—Ç—Å—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞

üéØ –ü–û–õ–ù–û–ï –ü–û–ö–†–´–¢–ò–ï –í–°–ï–• –°–û–°–¢–û–Ø–ù–ò–ô FSM:
- ‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è (AuthStates, RegistrationStates)
- ‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å (AdminStates) - –≤—Å–µ 8 —Å–æ—Å—Ç–æ—è–Ω–∏–π
- ‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤ (TestCreationStates) - –≤—Å–µ 21 —Å–æ—Å—Ç–æ—è–Ω–∏–µ
- ‚úÖ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤ - –≤—Å–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
- ‚úÖ –ü—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤ (TestTakingStates) - –≤—Å–µ 5 —Å–æ—Å—Ç–æ—è–Ω–∏–π  
- ‚úÖ –ù–∞—Å—Ç–∞–≤–Ω–∏—á–µ—Å—Ç–≤–æ (MentorshipStates) - –≤—Å–µ 6 —Å–æ—Å—Ç–æ—è–Ω–∏–π
- ‚úÖ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞–∂–µ—Ä–∞–º–∏ (TraineeManagementStates) - –≤—Å–µ 3 —Å–æ—Å—Ç–æ—è–Ω–∏—è
- ‚úÖ –†–∞–±–æ—Ç–∞ —Å –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏ –∏ –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞–º–∏
- ‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è —á–∏—Å–ª–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
- ‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ –∫–æ–Ω—Ç–µ–Ω—Ç–∞

‚ö†Ô∏è –í–ê–ñ–ù–û:
- Fallback —Ä–æ—É—Ç–µ—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω –ü–û–°–õ–ï–î–ù–ò–ú –≤ main.py
- –í—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—Ç —á–µ—Ç–∫–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
- –ö–æ–º–∞–Ω–¥–∞ /cancel –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –ª—é–±–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –¥–ª—è –≤—ã—Ö–æ–¥–∞
"""

from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.filters import StateFilter

from states.states import (
    AuthStates, RegistrationStates, AdminStates, 
    TestCreationStates, TestTakingStates, 
    MentorshipStates, TraineeManagementStates
)
from keyboards.keyboards import get_role_selection_keyboard, get_yes_no_keyboard, get_question_type_keyboard
from utils.logger import log_user_action

router = Router()

# =================================
# –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –î–õ–Ø –°–û–°–¢–û–Ø–ù–ò–ô –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò
# =================================

@router.message(StateFilter(AuthStates.waiting_for_auth))
async def handle_unexpected_auth_input(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
    await message.answer(
        "‚ùì <b>–ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –≤–≤–æ–¥</b>\n\n"
        "–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É <code>/login</code> –¥–ª—è –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É –∏–ª–∏ <code>/register</code> –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.\n\n"
        "–î–ª—è –æ—Ç–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ <code>/cancel</code>",
        parse_mode="HTML"
    )

# =================================
# –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –î–õ–Ø –°–û–°–¢–û–Ø–ù–ò–ô –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò
# =================================

@router.message(StateFilter(RegistrationStates.waiting_for_full_name))
async def handle_unexpected_name_input(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∏–º–µ–Ω–∏"""
    if not message.text or len(message.text.strip()) < 2:
        await message.answer(
            "‚ùå <b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∏–º—è</b>\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –ø–æ–ª–Ω–æ–µ –∏–º—è (–º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞).\n"
            "–ù–∞–ø—Ä–∏–º–µ—Ä: <code>–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤</code>\n\n"
            "–î–ª—è –æ—Ç–º–µ–Ω—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ <code>/cancel</code>",
            parse_mode="HTML"
        )
    else:
        # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π, –Ω–æ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–≤—Ç–æ—Ä—è–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é
        await message.answer(
            "üîÑ <b>–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥</b>\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –ø–æ–ª–Ω–æ–µ –∏–º—è –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.\n"
            "–ù–∞–ø—Ä–∏–º–µ—Ä: <code>–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤</code>",
            parse_mode="HTML"
        )

@router.message(StateFilter(RegistrationStates.waiting_for_phone))
async def handle_unexpected_phone_input(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ —Ç–µ–ª–µ—Ñ–æ–Ω–∞"""
    await message.answer(
        "‚ùå <b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–µ–ª–µ—Ñ–æ–Ω–∞</b>\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É—è –∫–Ω–æ–ø–∫—É '–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º' –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n"
        "‚Ä¢ <code>+7 (999) 123-45-67</code>\n"
        "‚Ä¢ <code>89991234567</code>\n\n"
        "–î–ª—è –æ—Ç–º–µ–Ω—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ <code>/cancel</code>",
        parse_mode="HTML"
    )

@router.message(StateFilter(RegistrationStates.waiting_for_role))
async def handle_unexpected_role_input(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Ä–æ–ª–∏"""
    await message.answer(
        "‚ùå <b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä —Ä–æ–ª–∏</b>\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å, –∏—Å–ø–æ–ª—å–∑—É—è –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ:",
        parse_mode="HTML",
        reply_markup=get_role_selection_keyboard()
    )

@router.message(StateFilter(RegistrationStates.waiting_for_admin_token))
async def handle_unexpected_token_input(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∞–¥–º–∏–Ω-—Ç–æ–∫–µ–Ω–∞"""
    await message.answer(
        "‚ùå <b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ç–æ–∫–µ–Ω</b>\n\n"
        "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ç–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ —Ä–æ–ª–∏ —É–ø—Ä–∞–≤–ª—è—é—â–µ–≥–æ.\n"
        "–ï—Å–ª–∏ —É –≤–∞—Å –Ω–µ—Ç —Ç–æ–∫–µ–Ω–∞, –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –∫ –≤—ã–±–æ—Ä—É —Ä–æ–ª–∏.\n\n"
        "–î–ª—è –æ—Ç–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ <code>/cancel</code>",
        parse_mode="HTML"
    )

# =================================
# –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –î–õ–Ø –°–û–°–¢–û–Ø–ù–ò–ô –°–û–ó–î–ê–ù–ò–Ø –¢–ï–°–¢–û–í
# =================================

@router.message(StateFilter(TestCreationStates.waiting_for_materials))
async def handle_unexpected_materials_input(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤"""
    if message.photo:
        await message.answer(
            "‚ùå <b>–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è</b>\n\n"
            "–î–ª—è –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ:\n"
            "‚Ä¢ üìé PDF –¥–æ–∫—É–º–µ–Ω—Ç—ã\n"
            "‚Ä¢ üìù –¢–µ–∫—Å—Ç–æ–≤—ã–µ —Å—Å—ã–ª–∫–∏\n"
            "‚Ä¢ ‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å (–µ—Å–ª–∏ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –Ω–µ –Ω—É–∂–Ω—ã)\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ PDF –¥–æ–∫—É–º–µ–Ω—Ç –∏–ª–∏ —Ç–µ–∫—Å—Ç.",
            parse_mode="HTML"
        )
    elif message.video or message.audio or message.voice or message.video_note:
        await message.answer(
            "‚ùå <b>–ú–µ–¥–∏–∞—Ñ–∞–π–ª—ã –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è</b>\n\n"
            "–î–ª—è –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ:\n"
            "‚Ä¢ üìé PDF –¥–æ–∫—É–º–µ–Ω—Ç—ã\n"
            "‚Ä¢ üìù –¢–µ–∫—Å—Ç–æ–≤—ã–µ —Å—Å—ã–ª–∫–∏\n"
            "‚Ä¢ ‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å (–µ—Å–ª–∏ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –Ω–µ –Ω—É–∂–Ω—ã)\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ PDF –¥–æ–∫—É–º–µ–Ω—Ç –∏–ª–∏ —Ç–µ–∫—Å—Ç.",
            parse_mode="HTML"
        )
    elif message.sticker:
        await message.answer(
            "‚ùå <b>–°—Ç–∏–∫–µ—Ä—ã –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è</b>\n\n"
            "–î–ª—è –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ:\n"
            "‚Ä¢ üìé PDF –¥–æ–∫—É–º–µ–Ω—Ç—ã\n"
            "‚Ä¢ üìù –¢–µ–∫—Å—Ç–æ–≤—ã–µ —Å—Å—ã–ª–∫–∏\n"
            "‚Ä¢ ‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å (–µ—Å–ª–∏ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –Ω–µ –Ω—É–∂–Ω—ã)",
            parse_mode="HTML"
        )
    else:
        await message.answer(
            "üîÑ <b>–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥</b>\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è:\n"
            "‚Ä¢ üìé PDF –¥–æ–∫—É–º–µ–Ω—Ç\n"
            "‚Ä¢ üìù –¢–µ–∫—Å—Ç–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–ª–∏ —Å—Å—ã–ª–∫–∏\n"
            "‚Ä¢ –ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å', –µ—Å–ª–∏ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –Ω–µ –Ω—É–∂–Ω—ã",
            parse_mode="HTML"
        )

@router.message(StateFilter(TestCreationStates.waiting_for_test_name))
async def handle_unexpected_test_name_input(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–µ—Å—Ç–∞"""
    if not message.text or len(message.text.strip()) < 3:
        await message.answer(
            "‚ùå <b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ</b>\n\n"
            "–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ—Å—Ç–∞ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 3 —Å–∏–º–≤–æ–ª–∞.\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –æ—Å–º—ã—Å–ª–µ–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –≤–∞—à–µ–≥–æ —Ç–µ—Å—Ç–∞.\n\n"
            "–î–ª—è –æ—Ç–º–µ–Ω—ã —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ <code>/cancel</code>",
            parse_mode="HTML"
        )
    else:
        await message.answer(
            "üîÑ <b>–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥</b>\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –≤–∞—à–µ–≥–æ —Ç–µ—Å—Ç–∞:",
            parse_mode="HTML"
        )

@router.message(StateFilter(TestCreationStates.waiting_for_description))
async def handle_unexpected_description_input(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –æ–ø–∏—Å–∞–Ω–∏—è —Ç–µ—Å—Ç–∞"""
    await message.answer(
        "üîÑ <b>–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥</b>\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –≤–∞—à–µ–≥–æ —Ç–µ—Å—Ç–∞.\n"
        "–û–ø–∏—Å–∞–Ω–∏–µ –ø–æ–º–æ–∂–µ—Ç —Å—Ç–∞–∂–µ—Ä–∞–º –ø–æ–Ω—è—Ç—å —Ü–µ–ª—å –∏ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Ç–µ—Å—Ç–∞.\n\n"
        "–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å', –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–ª—è—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ.",
        parse_mode="HTML"
    )

@router.message(StateFilter(TestCreationStates.waiting_for_question_text))
async def handle_unexpected_question_text_input(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ —Ç–µ–∫—Å—Ç–∞ –≤–æ–ø—Ä–æ—Å–∞"""
    if not message.text or len(message.text.strip()) < 5:
        await message.answer(
            "‚ùå <b>–°–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π –≤–æ–ø—Ä–æ—Å</b>\n\n"
            "–¢–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 5 —Å–∏–º–≤–æ–ª–æ–≤.\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π—Ç–µ –≤–æ–ø—Ä–æ—Å –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ.",
            parse_mode="HTML"
        )
    else:
        await message.answer(
            "üîÑ <b>–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥</b>\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞:",
            parse_mode="HTML"
        )

@router.message(StateFilter(TestCreationStates.waiting_for_option))
async def handle_unexpected_option_input(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∞"""
    if not message.text or len(message.text.strip()) < 1:
        await message.answer(
            "‚ùå <b>–ü—É—Å—Ç–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞</b>\n\n"
            "–í–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞:",
            parse_mode="HTML"
        )
    else:
        await message.answer(
            "üîÑ <b>–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥</b>\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞:",
            parse_mode="HTML"
        )

@router.message(StateFilter(TestCreationStates.waiting_for_answer))
async def handle_unexpected_answer_input(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞"""
    data = await state.get_data()
    q_type = data.get('current_question_type')
    
    if q_type == 'single_choice':
        await message.answer(
            "‚ùå <b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –æ—Ç–≤–µ—Ç–∞</b>\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.\n"
            "–ù–∞–ø—Ä–∏–º–µ—Ä: <code>2</code>",
            parse_mode="HTML"
        )
    elif q_type == 'multiple_choice':
        await message.answer(
            "‚ùå <b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞</b>\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é.\n"
            "–ù–∞–ø—Ä–∏–º–µ—Ä: <code>1, 3</code> –∏–ª–∏ <code>2, 4, 5</code>",
            parse_mode="HTML"
        )
    else:
        await message.answer(
            "üîÑ <b>–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥</b>\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å:",
            parse_mode="HTML"
        )

@router.message(StateFilter(TestCreationStates.waiting_for_points))
async def handle_unexpected_points_input(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –±–∞–ª–ª–æ–≤"""
    if message.text:
        try:
            points = float(message.text.replace(',', '.'))
            if points <= 0:
                await message.answer(
                    "‚ùå <b>–ë–∞–ª–ª—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω—É–ª—è</b>\n\n"
                    "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –±–∞–ª–ª–æ–≤.\n"
                    "–ù–∞–ø—Ä–∏–º–µ—Ä: <code>1</code>, <code>2.5</code>, <code>0.5</code>",
                    parse_mode="HTML"
                )
            else:
                await message.answer(
                    "‚ùå <b>–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞</b>\n\n"
                    "–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –±–∞–ª–ª–æ–≤:",
                    parse_mode="HTML"
                )
        except ValueError:
            await message.answer(
                "‚ùå <b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤</b>\n\n"
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –±–∞–ª–ª–æ–≤ –∑–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç.\n"
                "–ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥—Ä–æ–±–Ω—ã–µ —á–∏—Å–ª–∞: <code>1</code>, <code>2.5</code>, <code>0.5</code>\n\n"
                "–ë–∞–ª–ª—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω—É–ª—è.",
                parse_mode="HTML"
            )
    else:
        await message.answer(
            "‚ùå <b>–ü—É—Å—Ç–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ</b>\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤ —á–∏—Å–ª–æ–º.",
            parse_mode="HTML"
        )

@router.message(StateFilter(TestCreationStates.waiting_for_threshold))
async def handle_unexpected_threshold_input(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –ø—Ä–æ—Ö–æ–¥–Ω–æ–≥–æ –±–∞–ª–ª–∞"""
    data = await state.get_data()
    questions = data.get('questions', [])
    max_score = sum(q['points'] for q in questions) if questions else 100
    
    await message.answer(
        f"‚ùå <b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª–ª</b>\n\n"
        f"–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º –æ—Ç 0.5 –¥–æ {max_score}.\n"
        f"–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–æ—Ö–æ–¥–Ω–æ–≥–æ –±–∞–ª–ª–∞:",
        parse_mode="HTML"
    )

# =================================
# –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –î–õ–Ø –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–ò–í–ù–´–• –°–û–°–¢–û–Ø–ù–ò–ô
# =================================

@router.message(StateFilter(AdminStates.waiting_for_user_selection))
async def handle_unexpected_admin_user_selection(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
    await message.answer(
        "‚ùå <b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–ø–∏—Å–∫–∞.\n\n"
        "–î–ª—è –æ—Ç–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ <code>/cancel</code>",
        parse_mode="HTML"
    )

@router.message(StateFilter(AdminStates.waiting_for_user_action))
async def handle_unexpected_admin_user_action(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –¥–µ–π—Å—Ç–≤–∏—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"""
    await message.answer(
        "‚ùå <b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ</b>\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–µ–π—Å—Ç–≤–∏—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.\n\n"
        "–î–ª—è –æ—Ç–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ <code>/cancel</code>",
        parse_mode="HTML"
    )

@router.message(StateFilter(AdminStates.waiting_for_role_change))
async def handle_unexpected_admin_role_change(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–æ–ª–∏"""
    await message.answer(
        "‚ùå <b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Ä–æ–ª—å</b>\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–π —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n\n"
        "–î–ª—è –æ—Ç–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ <code>/cancel</code>",
        parse_mode="HTML"
    )

@router.message(StateFilter(AdminStates.waiting_for_confirmation))
async def handle_unexpected_admin_confirmation(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –¥–µ–π—Å—Ç–≤–∏—è"""
    await message.answer(
        "‚ùå <b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ</b>\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ '–î–∞' –∏–ª–∏ '–ù–µ—Ç' –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è.\n\n"
        "–î–ª—è –æ—Ç–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ <code>/cancel</code>",
        parse_mode="HTML"
    )

@router.message(StateFilter(AdminStates.waiting_for_role_selection, AdminStates.waiting_for_permission_action, AdminStates.waiting_for_permission_selection, AdminStates.waiting_for_permission_confirmation))
async def handle_unexpected_admin_permissions(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏—è—Ö —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∞–≤–∞–º–∏"""
    await message.answer(
        "‚ùå <b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä</b>\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–æ–ª—è–º–∏ –∏ –ø—Ä–∞–≤–∞–º–∏.\n\n"
        "–î–ª—è –æ—Ç–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ <code>/cancel</code>",
        parse_mode="HTML"
    )

# =================================
# –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –î–õ–Ø –†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–Ø –¢–ï–°–¢–û–í
# =================================

@router.message(StateFilter(TestCreationStates.waiting_for_more_questions))
async def handle_unexpected_more_questions(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤"""
    await message.answer(
        "‚ùå <b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä</b>\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞:\n"
        "‚Ä¢ '–î–æ–±–∞–≤–∏—Ç—å –µ—â–µ –≤–æ–ø—Ä–æ—Å'\n"
        "‚Ä¢ '–ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–∞'\n\n"
        "–î–ª—è –æ—Ç–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ <code>/cancel</code>",
        parse_mode="HTML"
    )

@router.message(StateFilter(TestCreationStates.waiting_for_stage_selection))
async def handle_unexpected_stage_selection(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —ç—Ç–∞–ø–∞"""
    await message.answer(
        "‚ùå <b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —ç—Ç–∞–ø</b>\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —ç—Ç–∞–ø–∞ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏.\n\n"
        "–î–ª—è –æ—Ç–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ <code>/cancel</code>",
        parse_mode="HTML"
    )

@router.message(StateFilter(TestCreationStates.waiting_for_final_confirmation))
async def handle_unexpected_final_confirmation(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –ø—Ä–∏ —Ñ–∏–Ω–∞–ª—å–Ω–æ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏"""
    await message.answer(
        "‚ùå <b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ</b>\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ '–î–∞' –∏–ª–∏ '–ù–µ—Ç' –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–∞.\n\n"
        "–î–ª—è –æ—Ç–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ <code>/cancel</code>",
        parse_mode="HTML"
    )

@router.message(StateFilter(TestCreationStates.waiting_for_edit_action))
async def handle_unexpected_edit_action(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –¥–µ–π—Å—Ç–≤–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    await message.answer(
        "‚ùå <b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ</b>\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–µ–π—Å—Ç–≤–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ—Å—Ç–∞.\n\n"
        "–î–ª—è –æ—Ç–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ <code>/cancel</code>",
        parse_mode="HTML"
    )

@router.message(StateFilter(TestCreationStates.waiting_for_new_test_name))
async def handle_unexpected_new_test_name(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–µ—Å—Ç–∞"""
    if not message.text or len(message.text.strip()) < 3:
        await message.answer(
            "‚ùå <b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ</b>\n\n"
            "–ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–µ—Å—Ç–∞ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 3 —Å–∏–º–≤–æ–ª–∞.\n\n"
            "–î–ª—è –æ—Ç–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ <code>/cancel</code>",
            parse_mode="HTML"
        )
    else:
        await message.answer(
            "üîÑ <b>–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥</b>\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è —Ç–µ—Å—Ç–∞:",
            parse_mode="HTML"
        )

@router.message(StateFilter(TestCreationStates.waiting_for_new_test_description))
async def handle_unexpected_new_description(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –æ–ø–∏—Å–∞–Ω–∏—è —Ç–µ—Å—Ç–∞"""
    await message.answer(
        "üîÑ <b>–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥</b>\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è —Ç–µ—Å—Ç–∞.\n\n"
        "–î–ª—è –æ—Ç–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ <code>/cancel</code>",
        parse_mode="HTML"
    )

@router.message(StateFilter(TestCreationStates.waiting_for_new_threshold))
async def handle_unexpected_new_threshold(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø—Ä–æ—Ö–æ–¥–Ω–æ–≥–æ –±–∞–ª–ª–∞"""
    if message.text:
        try:
            threshold = float(message.text.replace(',', '.'))
            if threshold <= 0:
                await message.answer(
                    "‚ùå <b>–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω—É–ª—è</b>\n\n"
                    "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.",
                    parse_mode="HTML"
                )
            else:
                await message.answer(
                    "üîÑ <b>–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥</b>\n\n"
                    "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª–ª:",
                    parse_mode="HTML"
                )
        except ValueError:
            await message.answer(
                "‚ùå <b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª–ª</b>\n\n"
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–æ—Ö–æ–¥–Ω–æ–≥–æ –±–∞–ª–ª–∞.\n\n"
                "–î–ª—è –æ—Ç–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ <code>/cancel</code>",
                parse_mode="HTML"
            )
    else:
        await message.answer(
            "‚ùå <b>–ü—É—Å—Ç–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ</b>\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª–ª —á–∏—Å–ª–æ–º.",
            parse_mode="HTML"
        )

@router.message(StateFilter(TestCreationStates.waiting_for_new_stage, TestCreationStates.waiting_for_new_attempts))
async def handle_unexpected_test_settings(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ç–µ—Å—Ç–∞"""
    await message.answer(
        "‚ùå <b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä</b>\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ç–µ—Å—Ç–∞.\n\n"
        "–î–ª—è –æ—Ç–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ <code>/cancel</code>",
        parse_mode="HTML"
    )

@router.message(StateFilter(TestCreationStates.waiting_for_new_materials))
async def handle_unexpected_new_materials(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤"""
    await message.answer(
        "üîÑ <b>–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥</b>\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã:\n"
        "‚Ä¢ üìé PDF –¥–æ–∫—É–º–µ–Ω—Ç\n"
        "‚Ä¢ üìù –¢–µ–∫—Å—Ç–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é\n"
        "‚Ä¢ –ò–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ '—É–¥–∞–ª–∏—Ç—å', —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã\n\n"
        "–î–ª—è –æ—Ç–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ <code>/cancel</code>",
        parse_mode="HTML"
    )

@router.message(StateFilter(TestCreationStates.waiting_for_question_selection, TestCreationStates.waiting_for_question_action))
async def handle_unexpected_question_management(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –ø—Ä–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏"""
    await message.answer(
        "‚ùå <b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä</b>\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–∞–º–∏ —Ç–µ—Å—Ç–∞.\n\n"
        "–î–ª—è –æ—Ç–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ <code>/cancel</code>",
        parse_mode="HTML"
    )

@router.message(StateFilter(TestCreationStates.waiting_for_question_edit))
async def handle_unexpected_question_edit(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –≤–æ–ø—Ä–æ—Å–∞"""
    if not message.text or len(message.text.strip()) < 5:
        await message.answer(
            "‚ùå <b>–°–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π –≤–æ–ø—Ä–æ—Å</b>\n\n"
            "–¢–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 5 —Å–∏–º–≤–æ–ª–æ–≤.\n\n"
            "–î–ª—è –æ—Ç–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ <code>/cancel</code>",
            parse_mode="HTML"
        )
    else:
        await message.answer(
            "üîÑ <b>–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥</b>\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞:",
            parse_mode="HTML"
        )

@router.message(StateFilter(TestCreationStates.waiting_for_answer_edit))
async def handle_unexpected_answer_edit(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –æ—Ç–≤–µ—Ç–∞"""
    await message.answer(
        "üîÑ <b>–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥</b>\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç.\n\n"
        "–î–ª—è –æ—Ç–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ <code>/cancel</code>",
        parse_mode="HTML"
    )

@router.message(StateFilter(TestCreationStates.waiting_for_points_edit))
async def handle_unexpected_points_edit(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –±–∞–ª–ª–æ–≤"""
    if message.text:
        try:
            points = float(message.text.replace(',', '.'))
            if points <= 0:
                await message.answer(
                    "‚ùå <b>–ë–∞–ª–ª—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω—É–ª—è</b>\n\n"
                    "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ.",
                    parse_mode="HTML"
                )
            else:
                await message.answer(
                    "üîÑ <b>–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥</b>\n\n"
                    "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤:",
                    parse_mode="HTML"
                )
        except ValueError:
            await message.answer(
                "‚ùå <b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤</b>\n\n"
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.\n\n"
                "–î–ª—è –æ—Ç–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ <code>/cancel</code>",
                parse_mode="HTML"
            )
    else:
        await message.answer(
            "‚ùå <b>–ü—É—Å—Ç–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ</b>\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤ —á–∏—Å–ª–æ–º.",
            parse_mode="HTML"
        )

# =================================
# –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –î–õ–Ø –°–û–°–¢–û–Ø–ù–ò–ô –ü–†–û–•–û–ñ–î–ï–ù–ò–Ø –¢–ï–°–¢–û–í
# =================================

@router.message(StateFilter(TestTakingStates.waiting_for_test_selection))
async def handle_unexpected_test_selection(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Ç–µ—Å—Ç–∞ –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è"""
    await message.answer(
        "‚ùå <b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä —Ç–µ—Å—Ç–∞</b>\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–µ—Å—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞.\n\n"
        "–î–ª—è –æ—Ç–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ <code>/cancel</code>",
        parse_mode="HTML"
    )

@router.message(StateFilter(TestTakingStates.waiting_for_test_start))
async def handle_unexpected_test_start(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –Ω–∞—á–∞–ª–∞ —Ç–µ—Å—Ç–∞"""
    await message.answer(
        "‚ùå <b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ</b>\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ç–µ—Å—Ç–∞ –∏–ª–∏ –æ—Ç–º–µ–Ω—ã.\n\n"
        "–î–ª—è –æ—Ç–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ <code>/cancel</code>",
        parse_mode="HTML"
    )

@router.message(StateFilter(TestTakingStates.test_completed))
async def handle_unexpected_test_completed(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ç–µ—Å—Ç–∞"""
    await message.answer(
        "‚úÖ <b>–¢–µ—Å—Ç —É–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω</b>\n\n"
        "–í—ã —É–∂–µ –∑–∞–≤–µ—Ä—à–∏–ª–∏ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ <code>/start</code> –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.",
        parse_mode="HTML"
    )

@router.message(StateFilter(TestTakingStates.taking_test))
async def handle_unexpected_test_input(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –≤–æ –≤—Ä–µ–º—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–µ—Å—Ç–∞"""
    data = await state.get_data()
    questions = data.get('questions', [])
    if not questions:
        await message.answer(
            "‚ùå <b>–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞</b>\n\n"
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–∏ —Ç–µ—Å—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ.",
            parse_mode="HTML"
        )
        await state.clear()
        return
    
    current_index = data.get('current_question_index', 0)
    if current_index >= len(questions):
        await message.answer(
            "‚ùå <b>–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω</b>\n\n"
            "–í—ã —É–∂–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã. –û–∂–∏–¥–∞–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.",
            parse_mode="HTML"
        )
        return
    
    question = questions[current_index]
    
    if question.question_type == 'text':
        await message.answer(
            "üîÑ <b>–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –æ—Ç–≤–µ—Ç</b>\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –æ—Ç–≤–µ—Ç –Ω–∞ —Ç–µ–∫—É—â–∏–π –≤–æ–ø—Ä–æ—Å –≤ –≤–∏–¥–µ —Ç–µ–∫—Å—Ç–∞.",
            parse_mode="HTML"
        )
    elif question.question_type == 'number':
        await message.answer(
            "‚ùå <b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —á–∏—Å–ª–æ–≤–æ–π –æ—Ç–≤–µ—Ç</b>\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å.",
            parse_mode="HTML"
        )
    elif question.question_type == 'multiple_choice':
        await message.answer(
            "‚ùå <b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞</b>\n\n"
            "–î–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤ —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º –≤—ã–±–æ—Ä–æ–º –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é.\n"
            "–ù–∞–ø—Ä–∏–º–µ—Ä: <code>1, 3</code>",
            parse_mode="HTML"
        )
    else:
        await message.answer(
            "‚ùå <b>–ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –≤–≤–æ–¥</b>\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç.",
            parse_mode="HTML"
                 )

# =================================
# –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –î–õ–Ø –°–û–°–¢–û–Ø–ù–ò–ô –ù–ê–°–¢–ê–í–ù–ò–ß–ï–°–¢–í–ê
# =================================

@router.message(StateFilter(MentorshipStates.waiting_for_trainee_selection))
async def handle_unexpected_mentor_trainee_selection(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Å—Ç–∞–∂–µ—Ä–∞ –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞"""
    await message.answer(
        "‚ùå <b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä —Å—Ç–∞–∂–µ—Ä–∞</b>\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å—Ç–∞–∂–µ—Ä–∞ –∏–∑ —Å–ø–∏—Å–∫–∞.\n\n"
        "–î–ª—è –æ—Ç–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ <code>/cancel</code>",
        parse_mode="HTML"
    )

@router.message(StateFilter(MentorshipStates.waiting_for_mentor_selection))
async def handle_unexpected_mentor_selection(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞"""
    await message.answer(
        "‚ùå <b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞</b>\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞ –∏–∑ —Å–ø–∏—Å–∫–∞.\n\n"
        "–î–ª—è –æ—Ç–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ <code>/cancel</code>",
        parse_mode="HTML"
    )

@router.message(StateFilter(MentorshipStates.waiting_for_assignment_confirmation))
async def handle_unexpected_mentor_assignment_confirmation(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞"""
    await message.answer(
        "‚ùå <b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ</b>\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ '–î–∞' –∏–ª–∏ '–ù–µ—Ç' –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞.\n\n"
        "–î–ª—è –æ—Ç–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ <code>/cancel</code>",
        parse_mode="HTML"
    )

@router.message(StateFilter(MentorshipStates.waiting_for_trainee_action))
async def handle_unexpected_mentor_trainee_action(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –¥–µ–π—Å—Ç–≤–∏—è —Å–æ —Å—Ç–∞–∂–µ—Ä–æ–º"""
    await message.answer(
        "‚ùå <b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ</b>\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–µ–π—Å—Ç–≤–∏—è —Å–æ —Å—Ç–∞–∂–µ—Ä–æ–º.\n\n"
        "–î–ª—è –æ—Ç–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ <code>/cancel</code>",
        parse_mode="HTML"
    )

@router.message(StateFilter(MentorshipStates.waiting_for_test_assignment))
async def handle_unexpected_mentor_test_assignment(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –ø—Ä–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–∏ —Ç–µ—Å—Ç–∞ —Å—Ç–∞–∂–µ—Ä—É"""
    await message.answer(
        "‚ùå <b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞</b>\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Ç–µ—Å—Ç–∞ —Å—Ç–∞–∂–µ—Ä—É.\n\n"
        "–î–ª—è –æ—Ç–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ <code>/cancel</code>",
        parse_mode="HTML"
    )

@router.message(StateFilter(MentorshipStates.waiting_for_test_selection_for_trainee))
async def handle_unexpected_mentor_test_selection(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Ç–µ—Å—Ç–∞ –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Å—Ç–∞–∂–µ—Ä—É"""
    await message.answer(
        "‚ùå <b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä —Ç–µ—Å—Ç–∞</b>\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–µ—Å—Ç–∞ –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Å—Ç–∞–∂–µ—Ä—É.\n\n"
        "–î–ª—è –æ—Ç–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ <code>/cancel</code>",
        parse_mode="HTML"
    )

# =================================
# –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –î–õ–Ø –£–ü–†–ê–í–õ–ï–ù–ò–Ø –°–¢–ê–ñ–ï–†–ê–ú–ò
# =================================

@router.message(StateFilter(TraineeManagementStates.waiting_for_trainee_selection))
async def handle_unexpected_trainee_management_selection(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Å—Ç–∞–∂–µ—Ä–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
    await message.answer(
        "‚ùå <b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä —Å—Ç–∞–∂–µ—Ä–∞</b>\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å—Ç–∞–∂–µ—Ä–∞ –∏–∑ —Å–ø–∏—Å–∫–∞.\n\n"
        "–î–ª—è –æ—Ç–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ <code>/cancel</code>",
        parse_mode="HTML"
    )

@router.message(StateFilter(TraineeManagementStates.waiting_for_trainee_action))
async def handle_unexpected_trainee_management_action(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –¥–µ–π—Å—Ç–≤–∏—è —Å–æ —Å—Ç–∞–∂–µ—Ä–æ–º"""
    await message.answer(
        "‚ùå <b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ</b>\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–µ–π—Å—Ç–≤–∏—è —Å–æ —Å—Ç–∞–∂–µ—Ä–æ–º.\n\n"
        "–î–ª—è –æ—Ç–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ <code>/cancel</code>",
        parse_mode="HTML"
    )

@router.message(StateFilter(TraineeManagementStates.waiting_for_test_access_grant))
async def handle_unexpected_trainee_test_access(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –ø—Ä–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–µ—Å—Ç—É"""
    await message.answer(
        "‚ùå <b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞</b>\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–µ—Å—Ç—É —Å—Ç–∞–∂–µ—Ä—É.\n\n"
        "–î–ª—è –æ—Ç–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ <code>/cancel</code>",
        parse_mode="HTML"
    )

# =================================
# –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–´–ô –û–ë–†–ê–ë–û–¢–ß–ò–ö –î–õ–Ø –õ–Æ–ë–´–• –°–û–°–¢–û–Ø–ù–ò–ô
# =================================

@router.message(F.text)
async def handle_unexpected_input_with_state(message: Message, state: FSMContext):
    """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –≤ –ª—é–±—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏—è—Ö"""
    current_state = await state.get_state()
    
    if current_state:
        await message.answer(
            f"‚ùì <b>–ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –≤–≤–æ–¥</b>\n\n"
            f"–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏.\n"
            f"–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: <code>{current_state}</code>\n\n"
            f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:\n"
            f"‚Ä¢ <code>/cancel</code> - –¥–ª—è –æ—Ç–º–µ–Ω—ã —Ç–µ–∫—É—â–µ–π –æ–ø–µ—Ä–∞—Ü–∏–∏\n"
            f"‚Ä¢ <code>/help</code> - –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏\n"
            f"‚Ä¢ <code>/start</code> - –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            parse_mode="HTML"
        )
        
        log_user_action(
            message.from_user.id, 
            message.from_user.username, 
            "unexpected_input", 
            {"state": current_state, "input": message.text[:100]}
        )
    else:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ FSM
        await message.answer(
            "‚ùì <b>–ö–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞</b>\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –∏–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
            "‚Ä¢ <code>/help</code> - –ø–æ–ª—É—á–∏—Ç—å —Å–ø—Ä–∞–≤–∫—É\n"
            "‚Ä¢ <code>/start</code> - –ø–µ—Ä–µ–π—Ç–∏ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
            "‚Ä¢ <code>/profile</code> - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ—Ñ–∏–ª—å",
            parse_mode="HTML"
        )

# =================================
# –û–ë–†–ê–ë–û–¢–ß–ò–ö –î–õ–Ø –ù–ï–û–ñ–ò–î–ê–ù–ù–´–• CALLBACK QUERY
# =================================

@router.callback_query(F.data)
async def handle_unexpected_callback(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã—Ö callback –∑–∞–ø—Ä–æ—Å–æ–≤"""
    current_state = await state.get_state()
    
    await callback.message.edit_text(
        f"‚ùì <b>–£—Å—Ç–∞—Ä–µ–≤—à–∞—è –∫–Ω–æ–ø–∫–∞</b>\n\n"
        f"–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –±–æ–ª—å—à–µ –Ω–µ –∞–∫—Ç—É–∞–ª—å–Ω–∞ –∏–ª–∏ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è.\n\n"
        f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:\n"
        f"‚Ä¢ <code>/cancel</code> - –¥–ª—è –æ—Ç–º–µ–Ω—ã —Ç–µ–∫—É—â–µ–π –æ–ø–µ—Ä–∞—Ü–∏–∏\n"
        f"‚Ä¢ <code>/start</code> - –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        parse_mode="HTML"
    )
    
    await callback.answer("‚ö†Ô∏è –£—Å—Ç–∞—Ä–µ–≤—à–∞—è –∫–Ω–æ–ø–∫–∞", show_alert=True)
    
    log_user_action(
        callback.from_user.id, 
        callback.from_user.username, 
        "unexpected_callback", 
        {"state": current_state, "data": callback.data}
    ) 