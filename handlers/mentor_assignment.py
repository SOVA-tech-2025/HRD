"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–≤ —Å—Ç–∞–∂–µ—Ä–∞–º —Ä–µ–∫—Ä—É—Ç–µ—Ä–∞–º–∏.
–í–∫–ª—é—á–∞–µ—Ç –≤—ã–±–æ—Ä —Å—Ç–∞–∂–µ—Ä–∞, –≤—ã–±–æ—Ä –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞ –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è.
"""

from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.fsm.context import FSMContext
from sqlalchemy.ext.asyncio import AsyncSession

from database.db import (
    get_trainees_without_mentor, get_available_mentors_for_trainee,
    assign_mentor_to_trainee, check_user_permission, get_user_by_tg_id
)
from handlers.auth import check_auth
from states.states import MentorAssignmentStates
from keyboards.keyboards import get_main_menu_keyboard, get_keyboard_by_role
from utils.logger import log_user_action, log_user_error

router = Router()


@router.message(F.text == "–ù–∞–∑–Ω–∞—á–∏—Ç—å –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞")
async def cmd_assign_mentor(message: Message, state: FSMContext, session: AsyncSession):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã '–ù–∞–∑–Ω–∞—á–∏—Ç—å –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞'"""
    try:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        is_auth = await check_auth(message, state, session)
        if not is_auth:
            return

        # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = await get_user_by_tg_id(session, message.from_user.id)
        if not user:
            await message.answer("–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ.")
            return

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ (—Ç–æ–ª—å–∫–æ —Ä–µ–∫—Ä—É—Ç–µ—Ä—ã)
        has_permission = await check_user_permission(session, user.id, "manage_groups")
        if not has_permission:
            await message.answer(
                "‚ùå <b>–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤</b>\n\n"
                "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–≤.\n"
                "–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.",
                parse_mode="HTML"
            )
            log_user_error(user.tg_id, "mentor_assignment_access_denied", "–ü–æ–ø—ã—Ç–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –±–µ–∑ –ø—Ä–∞–≤")
            return

        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å—Ç–∞–∂–µ—Ä–æ–≤ –±–µ–∑ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞
        trainees_without_mentor = await get_trainees_without_mentor(session)

        if not trainees_without_mentor:
            await message.answer(
                "üë• <b>–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞</b>\n\n"
                "üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã:</b>\n"
                "‚Ä¢ –°—Ç–∞–∂–µ—Ä–æ–≤ –±–µ–∑ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞: 0\n"
                "‚Ä¢ –¢—Ä–µ–±—É–µ—Ç—Å—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–≤\n\n"
                "üéØ <b>–í—Å–µ —Å—Ç–∞–∂–µ—Ä—ã —É–∂–µ –∏–º–µ—é—Ç –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–≤!</b>\n\n"
                "–í—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —Å—Ç–∞–∂–µ—Ä—ã —É–∂–µ –Ω–∞–∑–Ω–∞—á–µ–Ω—ã –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞–º.",
                reply_markup=get_main_menu_keyboard(),
                parse_mode="HTML"
            )
            log_user_action(user.tg_id, "no_trainees_without_mentor", "–í—Å–µ —Å—Ç–∞–∂–µ—Ä—ã –∏–º–µ—é—Ç –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–≤")
            return

        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã
        trainees_count = len(trainees_without_mentor)

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
        stats_message = (
            "üë• <b>–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞</b>\n\n"
            "üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã:</b>\n"
            f"‚Ä¢ –°—Ç–∞–∂–µ—Ä–æ–≤ –±–µ–∑ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞: {trainees_count}\n"
            "‚Ä¢ –¢—Ä–µ–±—É–µ—Ç—Å—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–≤\n\n"
            "üéØ <b>–í–∞—à–∞ –∑–∞–¥–∞—á–∞:</b> –ù–∞–∑–Ω–∞—á–∏—Ç—å –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞ –∫–∞–∂–¥–æ–º—É —Å—Ç–∞–∂–µ—Ä—É –¥–ª—è:\n"
            "‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏—è\n"
            "‚Ä¢ –ö–æ–Ω—Ç—Ä–æ–ª—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –æ–±—É—á–µ–Ω–∏—è\n"
            "‚Ä¢ –ü–æ–º–æ—â–∏ –≤ –∞–¥–∞–ø—Ç–∞—Ü–∏–∏\n"
            "‚Ä¢ –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–µ—Å—Ç–∞–º\n\n"
            "üëá <b>–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞–∂–µ—Ä–∞ –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞:</b>"
        )

        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ —Å–ø–∏—Å–∫–æ–º —Å—Ç–∞–∂–µ—Ä–æ–≤
        keyboard = InlineKeyboardMarkup(inline_keyboard=[])

        for trainee in trainees_without_mentor:
            keyboard.inline_keyboard.append([
                InlineKeyboardButton(
                    text=f"{trainee.full_name}",
                    callback_data=f"select_trainee:{trainee.id}"
                )
            ])

        # –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã
        keyboard.inline_keyboard.append([
            InlineKeyboardButton(text="üö´ –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel_mentor_assignment")
        ])

        await message.answer(
            stats_message,
            reply_markup=keyboard,
            parse_mode="HTML"
        )

        await state.set_state(MentorAssignmentStates.selecting_trainee)
        log_user_action(user.tg_id, "mentor_assignment_started", f"–ù–∞—á–∞—Ç –ø—Ä–æ—Ü–µ—Å—Å –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–≤. –°—Ç–∞–∂–µ—Ä–æ–≤ –±–µ–∑ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞: {trainees_count}")

    except Exception as e:
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –º–µ–Ω—é –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–≤")
        log_user_error(message.from_user.id, "mentor_assignment_error", str(e))


@router.callback_query(F.data.startswith("select_trainee:"), MentorAssignmentStates.selecting_trainee)
async def callback_select_trainee(callback: CallbackQuery, state: FSMContext, session: AsyncSession):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Å—Ç–∞–∂–µ—Ä–∞"""
    try:
        await callback.answer()

        trainee_id = int(callback.data.split(":")[1])

        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å—Ç–∞–∂–µ—Ä–∞
        trainee = await get_user_by_tg_id(session, trainee_id)
        if not trainee:
            await callback.message.edit_text("–°—Ç–∞–∂–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return

        # –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–≤ –¥–ª—è —ç—Ç–æ–≥–æ —Å—Ç–∞–∂–µ—Ä–∞
        available_mentors = await get_available_mentors_for_trainee(session, trainee_id)

        if not available_mentors:
            await callback.message.edit_text(
                f"‚ùå <b>–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–≤</b>\n\n"
                f"üë§ <b>–°—Ç–∞–∂–µ—Ä:</b> {trainee.full_name}\n\n"
                "–î–ª—è —ç—Ç–æ–≥–æ —Å—Ç–∞–∂–µ—Ä–∞ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–≤.\n"
                "–í–æ–∑–º–æ–∂–Ω–æ, –Ω–µ—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤, —Ä–∞–±–æ—Ç–∞—é—â–∏—Ö –Ω–∞ —Ç–æ–º –∂–µ –æ–±—ä–µ–∫—Ç–µ.",
                parse_mode="HTML"
            )
            return

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å—Ç–∞–∂–µ—Ä–∞ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
        await state.update_data(selected_trainee_id=trainee_id)

        # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç–∞–∂–µ—Ä–µ
        trainee_info = (
            f"üë§ <b>–í—ã–±—Ä–∞–Ω —Å—Ç–∞–∂–µ—Ä:</b> {trainee.full_name}\n"
            f"üìç<b>1Ô∏è‚É£–û–±—ä–µ–∫—Ç —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏:</b> {trainee.internship_object.name if trainee.internship_object else '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"
            f"üìç<b>2Ô∏è‚É£–û–±—ä–µ–∫—Ç —Ä–∞–±–æ—Ç—ã:</b> {trainee.work_object.name if trainee.work_object else '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"
            f"üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {trainee.phone_number}\n"
            f"üìÖ <b>–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</b> {trainee.registration_date.strftime('%d.%m.%Y')}\n\n"
            "üë®‚Äçüè´ <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∏:</b>\n"
        )

        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞–º–∏
        keyboard = InlineKeyboardMarkup(inline_keyboard=[])

        for mentor in available_mentors:
            mentor_info = (
                f"üë§ {mentor.full_name}\n"
                f"üìç<b>2Ô∏è‚É£–û–±—ä–µ–∫—Ç —Ä–∞–±–æ—Ç—ã:</b> {mentor.work_object.name if mentor.work_object else '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"
                f"üìû {mentor.phone_number}\n"
                f"üìß @{mentor.username if mentor.username else '–Ω–µ —É–∫–∞–∑–∞–Ω'}"
            )

            keyboard.inline_keyboard.append([
                InlineKeyboardButton(
                    text=mentor.full_name,
                    callback_data=f"select_mentor:{mentor.id}"
                )
            ])

        # –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã
        keyboard.inline_keyboard.append([
            InlineKeyboardButton(text="üö´ –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel_mentor_assignment")
        ])

        await callback.message.edit_text(
            trainee_info + "\n<b>–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞ –¥–ª—è —ç—Ç–æ–≥–æ —Å—Ç–∞–∂–µ—Ä–∞:</b>",
            reply_markup=keyboard,
            parse_mode="HTML"
        )

        await state.set_state(MentorAssignmentStates.selecting_mentor)
        log_user_action(callback.from_user.id, "trainee_selected", f"–í—ã–±—Ä–∞–Ω —Å—Ç–∞–∂–µ—Ä {trainee.full_name} (ID: {trainee_id})")

    except Exception as e:
        await callback.message.edit_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Å—Ç–∞–∂–µ—Ä–∞")
        log_user_error(callback.from_user.id, "select_trainee_error", str(e))


@router.callback_query(F.data.startswith("select_mentor:"), MentorAssignmentStates.selecting_mentor)
async def callback_select_mentor(callback: CallbackQuery, state: FSMContext, session: AsyncSession):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞"""
    try:
        await callback.answer()

        mentor_id = int(callback.data.split(":")[1])

        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        state_data = await state.get_data()
        trainee_id = state_data.get("selected_trainee_id")

        if not trainee_id:
            await callback.message.edit_text("–û—à–∏–±–∫–∞: —Å—Ç–∞–∂–µ—Ä –Ω–µ –≤—ã–±—Ä–∞–Ω")
            return

        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å—Ç–∞–∂–µ—Ä–∞ –∏ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞
        trainee = await get_user_by_tg_id(session, trainee_id)
        mentor = await get_user_by_tg_id(session, mentor_id)

        if not trainee or not mentor:
            await callback.message.edit_text("–û—à–∏–±–∫–∞: –¥–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
        await state.update_data(selected_mentor_id=mentor_id)

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        confirmation_message = (
            "ü§ù <b>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞</b>\n\n"
            "üë§ <b>–°—Ç–∞–∂–µ—Ä:</b>\n"
            f"   ‚Ä¢ –§–ò–û: {trainee.full_name}\n"
            f"üìç<b>1Ô∏è‚É£–û–±—ä–µ–∫—Ç —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏:</b> {trainee.internship_object.name if trainee.internship_object else '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"
            f"üìç<b>2Ô∏è‚É£–û–±—ä–µ–∫—Ç —Ä–∞–±–æ—Ç—ã:</b> {trainee.work_object.name if trainee.work_object else '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"
            f"   ‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω: {trainee.phone_number}\n"
            f"   ‚Ä¢ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {trainee.registration_date.strftime('%d.%m.%Y')}\n\n"
            "üë®‚Äçüè´ <b>–ù–∞—Å—Ç–∞–≤–Ω–∏–∫:</b>\n"
            f"   ‚Ä¢ –§–ò–û: {mentor.full_name}\n"
            f"üìç<b>2Ô∏è‚É£–û–±—ä–µ–∫—Ç —Ä–∞–±–æ—Ç—ã:</b> {mentor.work_object.name if mentor.work_object else '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"
            f"   ‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω: {mentor.phone_number}\n"
            f"   ‚Ä¢ –¢–µ–∫—É—â–∏—Ö —Å—Ç–∞–∂–µ—Ä–æ–≤: 0\n\n"  # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –ø–æ–¥—Å—á–µ—Ç–∞ —Ç–µ–∫—É—â–∏—Ö —Å—Ç–∞–∂–µ—Ä–æ–≤
            "‚ùì <b>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞:</b>"
        )

        # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="confirm_mentor_assignment"),
                InlineKeyboardButton(text="üö´ –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel_mentor_assignment")
            ]
        ])

        await callback.message.edit_text(
            confirmation_message,
            reply_markup=keyboard,
            parse_mode="HTML"
        )

        await state.set_state(MentorAssignmentStates.confirming_assignment)
        log_user_action(callback.from_user.id, "mentor_selected", f"–í—ã–±—Ä–∞–Ω –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫ {mentor.full_name} (ID: {mentor_id}) –¥–ª—è —Å—Ç–∞–∂–µ—Ä–∞ {trainee.full_name}")

    except Exception as e:
        await callback.message.edit_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞")
        log_user_error(callback.from_user.id, "select_mentor_error", str(e))


@router.callback_query(F.data == "confirm_mentor_assignment", MentorAssignmentStates.confirming_assignment)
async def callback_confirm_mentor_assignment(callback: CallbackQuery, state: FSMContext, session: AsyncSession):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞"""
    try:
        await callback.answer()

        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        state_data = await state.get_data()
        trainee_id = state_data.get("selected_trainee_id")
        mentor_id = state_data.get("selected_mentor_id")
        recruiter_id = callback.from_user.id

        if not trainee_id or not mentor_id:
            await callback.message.edit_text("–û—à–∏–±–∫–∞: –¥–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return

        # –ù–∞–∑–Ω–∞—á–∞–µ–º –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞
        success = await assign_mentor_to_trainee(session, trainee_id, mentor_id, recruiter_id)

        if success:
            # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
            trainee = await get_user_by_tg_id(session, trainee_id)
            mentor = await get_user_by_tg_id(session, mentor_id)
            recruiter = await get_user_by_tg_id(session, recruiter_id)

            success_message = (
                "‚úÖ <b>–ù–∞—Å—Ç–∞–≤–Ω–∏–∫ —É—Å–ø–µ—à–Ω–æ –Ω–∞–∑–Ω–∞—á–µ–Ω!</b>\n\n"
                f"üë§ <b>–°—Ç–∞–∂–µ—Ä:</b> {trainee.full_name}\n"
                f"üë®‚Äçüè´ <b>–ù–∞—Å—Ç–∞–≤–Ω–∏–∫:</b> {mentor.full_name}\n\n"
                f"üìÖ <b>–î–∞—Ç–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è:</b> {trainee.registration_date.strftime('%d.%m.%Y %H:%M')}\n"
                f"üë§ <b>–ù–∞–∑–Ω–∞—á–∏–ª:</b> {recruiter.full_name} - –†–µ–∫—Ä—É—Ç–µ—Ä\n\n"
                "üì¨ <b>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã:</b>\n"
                "‚Ä¢ ‚úÖ –°—Ç–∞–∂–µ—Ä –ø–æ–ª—É—á–∏–ª –∫–æ–Ω—Ç–∞–∫—Ç—ã –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞\n"
                f"‚Ä¢ üìû –¢–µ–ª–µ—Ñ–æ–Ω: {mentor.phone_number}\n"
                f"‚Ä¢ üìß Telegram: @{mentor.username if mentor.username else '–Ω–µ —É–∫–∞–∑–∞–Ω'}\n\n"
                "üéØ <b>–°—Ç–∞–∂–µ—Ä –º–æ–∂–µ—Ç —Å—Ä–∞–∑—É —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–º –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞!</b>"
            )

            # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã
            keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [
                    InlineKeyboardButton(text="üë®‚Äçüè´ –ù–∞–∑–Ω–∞—á–∏—Ç—å –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞", callback_data="assign_mentor"),
                    InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
                ]
            ])

            await callback.message.edit_text(
                success_message,
                reply_markup=keyboard,
                parse_mode="HTML"
            )

            log_user_action(recruiter_id, "mentor_assigned_success",
                          f"–ù–∞–∑–Ω–∞—á–µ–Ω –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫ {mentor.full_name} (ID: {mentor_id}) —Å—Ç–∞–∂–µ—Ä—É {trainee.full_name} (ID: {trainee_id})")

        else:
            await callback.message.edit_text(
                "‚ùå <b>–û—à–∏–±–∫–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞</b>\n\n"
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–∏ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞.\n"
                "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.",
                parse_mode="HTML"
            )
            log_user_error(recruiter_id, "mentor_assignment_failed", f"–û—à–∏–±–∫–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞ {mentor_id} —Å—Ç–∞–∂–µ—Ä—É {trainee_id}")

        # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await state.clear()

    except Exception as e:
        await callback.message.edit_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è")
        log_user_error(callback.from_user.id, "confirm_mentor_assignment_error", str(e))


@router.callback_query(F.data == "cancel_mentor_assignment")
async def callback_cancel_mentor_assignment(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω—ã –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞"""
    try:
        await callback.answer()

        await callback.message.edit_text(
            "üö´ <b>–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ</b>\n\n"
            "–í—ã –º–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ —ç—Ç–æ–º—É –ø–æ–∑–∂–µ —á–µ—Ä–µ–∑ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.",
            reply_markup=get_main_menu_keyboard(),
            parse_mode="HTML"
        )

        await state.clear()
        log_user_action(callback.from_user.id, "mentor_assignment_cancelled", "–û—Ç–º–µ–Ω–µ–Ω–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞")

    except Exception as e:
        log_user_error(callback.from_user.id, "cancel_mentor_assignment_error", str(e))


@router.callback_query(F.data == "assign_mentor")
async def callback_assign_mentor(callback: CallbackQuery, state: FSMContext, session: AsyncSession):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ù–∞–∑–Ω–∞—á–∏—Ç—å –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞' –∏–∑ —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    try:
        await callback.answer()

        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = await get_user_by_tg_id(session, callback.from_user.id)
        if not user:
            await callback.message.edit_text("–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ.")
            return

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
        has_permission = await check_user_permission(session, user.id, "manage_groups")
        if not has_permission:
            await callback.message.edit_text(
                "‚ùå <b>–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤</b>",
                parse_mode="HTML"
            )
            return

        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å—Ç–∞–∂–µ—Ä–æ–≤ –±–µ–∑ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞
        trainees_without_mentor = await get_trainees_without_mentor(session)

        if not trainees_without_mentor:
            await callback.message.edit_text(
                "üéØ <b>–í—Å–µ —Å—Ç–∞–∂–µ—Ä—ã —É–∂–µ –∏–º–µ—é—Ç –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–≤!</b>",
                reply_markup=get_main_menu_keyboard(),
                parse_mode="HTML"
            )
            return

        # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –Ω–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞
        await cmd_assign_mentor(callback.message, state, session)

    except Exception as e:
        await callback.message.edit_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")
        log_user_error(callback.from_user.id, "assign_mentor_redirect_error", str(e))
